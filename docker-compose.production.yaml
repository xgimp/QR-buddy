services:

  web:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
        - BUILD_ENVIRONMENT=production  # dev|production
    container_name: qr_buddies_web
    image: qr_buddies_web
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - web_db:/app/data
    networks:
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qr_buddies.entrypoints=web,websecure"
      - "traefik.http.routers.qr_buddies.rule=Host(`chat.bacovsky.online`)"
      - "traefik.http.routers.qr_buddies.tls=true"
      - "traefik.http.routers.qr_buddies.tls.certresolver=production"
    restart: unless-stopped
    # ports:
    #   - "8000:8000"
    depends_on:
      valkey:
        condition: service_healthy
    # env_file:
    #   - ./.env
    command: >
      sh -c "python manage.py collectstatic --no-input &&
             daphne -b 0.0.0.0 -p 8000 qr_buddies.asgi:application"
             
  
  valkey:
    image: valkey/valkey:7.2-alpine
    container_name: qr_buddies_valkey
    command: valkey-server /etc/valkey/valkey.conf
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - ./compose/production/valkey/valkey.conf:/etc/valkey/valkey.conf
    # ports:
    #   - 6379:6379
    restart: unless-stopped

volumes:
  web_db:
  static_volume:
  media_volume:


networks:
  traefik-proxy:
    external: true
